---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: builds.spot.release.com
spec:
  group: spot.release.com
  names:
    kind: Build
    listKind: BuildList
    plural: builds
    singular: build
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Build is the Schema for the builds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              image:
                description: Information about the image that's going to be built
                  For an image to be succesfully built, it needs to have a RegistrySpec
                  associated with it.
                properties:
                  registry:
                    description: Registry is where all the information for the container
                      registry lives. It needs to be properly configured for the build
                      to be pushed successfully. A build is pushed to the registry
                      only if the `RepositoryContext` exists with this `Registry`
                    properties:
                      secret:
                        description: SecretRef Reference to an existing k8s secret.
                          The secret need to exist within the same namespace. If the
                          secret doesn't exists and the repository is private, the
                          build will fail trying to pull the repository.
                        type: string
                      tags:
                        description: List of tags the image will be exported with
                          to the registry. This will include the ImageSpec's tag if
                          it's not set here.
                        items:
                          type: string
                        type: array
                      target:
                        description: Target is an optional field to specify what Target
                          you want to export with this build. This is only usable
                          for build that supports more than one target.
                        type: string
                      url:
                        description: "URL is the complete URL that points to a registry.
                          The Images built by the Builder will be pushed to this registry.
                          If the registry is private, the service account that the
                          builder runs in needs to have write access to the registry.
                          \n TODO: Add a SecretRef so that the Builder CRD can be
                          provided a secret for when a service account can't be set."
                        type: string
                    required:
                    - secret
                    - url
                    type: object
                  repository:
                    description: Repository information is passed down to buildkit
                      as instruction on how to proceed with the repository. The image
                      will be build from source if the `Repository` is set.
                    properties:
                      context:
                        description: It's the location for the content of your build
                          within the repository.
                        type: string
                      dockerfile:
                        description: Location of your Dockerfile within the repository.
                        type: string
                      hash:
                        description: Hash of the commit to build (usually a sha)
                        type: string
                      ref:
                        description: Reference is usually a branch.
                        type: string
                      secret:
                        description: SecretRef Reference to an existing k8s secret.
                          The secret need to exist within the same namespace. If the
                          secret doesn't exists and the repository is private, the
                          build will fail trying to pull the repository.
                        type: string
                      url:
                        description: URL of the repository
                        type: string
                    required:
                    - context
                    - dockerfile
                    - ref
                    - secret
                    - url
                    type: object
                type: object
            type: object
          status:
            description: BuildStatus defines the observed state of Build
            properties:
              conditions:
                description: Set of conditions that the build manages. For a build
                  to be successful and completed, all the conditions in this set are
                  required to have a status of ConditionSuccess. A build is considered
                  to have failed if at least one of the condition in this list is
                  marked as ConditionError
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    status:
                      description: Status of the condition. Can be In Progress, Error,
                        Success.
                      type: string
                    type:
                      description: Type is the name of the condition. Conceptually
                        this represents a task in the process of a Build.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              image:
                description: The Image will store information about the image that
                  was created by this build. This value is nil until the stage reaches
                  BuildStageDone
                properties:
                  metadata:
                    type: string
                  url:
                    type: string
                type: object
              phase:
                description: 'Phase is a composite of the conditions. It''s main use
                  is to display the general state of the Build. This value is derived
                  from the BuildConditions. There are two different outcome for this
                  build, - Success: Before the phase shift to success, the `Image`
                  will be set with and available. - Error: At least one condition
                  failed and some information can be found within the Condition. Additionally,
                  it''s possible that there''s more information available in the events
                  stream.'
                enum:
                - Running
                - Done
                - Errored
                type: string
              pod:
                description: The Pod that will run the build logic It will be in charge
                  of updating the status of this Build and store the BuildImage when
                  the image is ready.
                properties:
                  name:
                    description: '`name` is the name of the resourec. Required'
                    type: string
                  namespace:
                    description: '`namespace` is the namespace of the resource. Required'
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - conditions
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
