---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: projects.spot.release.com
spec:
  group: spot.release.com
  names:
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Project is the Schema for the projects API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProjectSpec defines the desired state of Project
            properties:
              template:
                description: Template to use for workspace that belongs to this project
                  This template can be modified but won't update existing workspace.
                properties:
                  components:
                    description: Collection of all the components that are required
                      for this workspace to deploy.
                    items:
                      properties:
                        command:
                          description: Execute a different entrypoint command than
                            the one specified in the image
                          items:
                            type: string
                          type: array
                        environments:
                          description: Links a component to an EnvironmentSpec entry.
                          items:
                            properties:
                              as:
                                description: If the Environment needs to have a different
                                  name than the one specified, `as` can be used to
                                  give it an alias.
                                type: string
                              name:
                                description: Name of the EnvironmentSpec at the Workspace
                                  level. The name is going to be used as the name
                                  of the ENV inside the component's pod.
                                type: string
                              value:
                                description: Value generally  is going to be generated
                                  from the Workspace's `EnvironmentSpec`
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        image:
                          description: Defines how the image is built for this component
                            The workspace will aggregate all the images at build time
                            and will deduplicate the images so only 1 unique image
                            is built.
                          properties:
                            registry:
                              description: Registry is where all the information for
                                the container registry lives. It needs to be properly
                                configured for the build to be pushed successfully.
                                A build is pushed to the registry only if the `RepositoryContext`
                                exists with this `Registry`
                              properties:
                                tag:
                                  description: Tag to use when deploying the image
                                    as part of the workspace. If the tag is not set,
                                    it will try to search for a default. If the `Tags`
                                    field is set, it will use the first tag in that
                                    list. If the `Tags` field is not set either, this
                                    field will be set to `latest`
                                  type: string
                                tags:
                                  description: List of tags the image will be exported
                                    with to the registry.
                                  items:
                                    type: string
                                  type: array
                                target:
                                  description: Target is an optional field to specify
                                    what Target you want to export with this build.
                                    This is only usable for build that supports more
                                    than one target.
                                  type: string
                                url:
                                  description: "URL is the complete URL that points
                                    to a registry. The Images built by the Builder
                                    will be pushed to this registry. If the registry
                                    is private, the service account that the builder
                                    runs in needs to have write access to the registry.
                                    \n DockerHub special case is also supported here.
                                    If the URL is not a valid URL, it will be expected
                                    to be a DockerHub image."
                                  type: string
                              required:
                              - url
                              type: object
                            repository:
                              description: Repository information is passed down to
                                buildkit as instruction on how to proceed with the
                                repository. The image will be build from source if
                                the `Repository` is set.
                              properties:
                                context:
                                  description: It's the location for the content of
                                    your build within the repository.
                                  type: string
                                dockerfile:
                                  description: Location of your Dockerfile within
                                    the repository.
                                  type: string
                                hash:
                                  description: Hash of the commit to build (usually
                                    a sha)
                                  type: string
                                ref:
                                  description: Reference is usually a branch.
                                  type: string
                                url:
                                  description: URL of the repository
                                  type: string
                              required:
                              - context
                              - dockerfile
                              - ref
                              - url
                              type: object
                          type: object
                        name:
                          type: string
                        networks:
                          description: Network service
                          items:
                            properties:
                              ingress:
                                description: If the Ingress field is set, an ingress
                                  will be created with the spec
                                properties:
                                  path:
                                    default: /
                                    description: Path is matched agaisnt the path
                                      of the incoming request. Path must begin with
                                      a '/'.
                                    type: string
                                  path_type:
                                    description: https://pkg.go.dev/k8s.io/api@v0.27.2/networking/v1#HTTPIngressPath
                                      Defaults to Prefix
                                    type: string
                                type: object
                              name:
                                description: Needs to be unique within a component,
                                  will be used as a prefix for the Ingress's host
                                  if the Ingress is set.
                                type: string
                              port:
                                type: integer
                              protocol:
                                type: string
                            required:
                            - name
                            - port
                            type: object
                          type: array
                      required:
                      - image
                      - name
                      type: object
                    type: array
                  environments:
                    description: Defines all the environments that will be needed
                      for this workspace
                    items:
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  host:
                    description: The host that components can use to generate ingresses.
                      Complete description of this field explained in WorkspaceSpec
                    type: string
                required:
                - environments
                - host
                type: object
            required:
            - template
            type: object
          status:
            description: ProjectStatus defines the observed state of Project
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
