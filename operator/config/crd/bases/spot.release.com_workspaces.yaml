---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: workspaces.spot.release.com
spec:
  group: spot.release.com
  names:
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    singular: workspace
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Workspace is the Schema for the workspaces API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              components:
                description: Collection of all the components that are required for
                  this workspace to deploy.
                items:
                  properties:
                    command:
                      description: Execute a different entrypoint command than the
                        one specified in the image
                      items:
                        type: string
                      type: array
                    environments:
                      description: Links a component to an EnvironmentSpec entry.
                      items:
                        properties:
                          as:
                            description: If the Environment needs to have a different
                              name than the one specified, `as` can be used to give
                              it an alias.
                            type: string
                          name:
                            description: Name of the EnvironmentSpec at the Workspace
                              level. The name is going to be used as the name of the
                              ENV inside the component's pod.
                            type: string
                          value:
                            description: Value generally  is going to be generated
                              from the Workspace's `EnvironmentSpec`
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    image:
                      description: Defines how the image is built for this component
                        The workspace will aggregate all the images at build time
                        and will deduplicate the images so only 1 unique image is
                        built.
                      properties:
                        registry:
                          description: Registry is where all the information for the
                            container registry lives. It needs to be properly configured
                            for the build to be pushed successfully. A build is pushed
                            to the registry only if the `RepositoryContext` exists
                            with this `Registry`
                          properties:
                            secret:
                              description: SecretRef Reference to an existing k8s
                                secret. The secret need to exist within the same namespace.
                                If the secret doesn't exists and the repository is
                                private, the build will fail trying to pull the repository.
                              type: string
                            tags:
                              description: List of tags the image will be exported
                                with to the registry. This will include the ImageSpec's
                                tag if it's not set here.
                              items:
                                type: string
                              type: array
                            target:
                              description: Target is an optional field to specify
                                what Target you want to export with this build. This
                                is only usable for build that supports more than one
                                target.
                              type: string
                            url:
                              description: "URL is the complete URL that points to
                                a registry. The Images built by the Builder will be
                                pushed to this registry. If the registry is private,
                                the service account that the builder runs in needs
                                to have write access to the registry. \n TODO: Add
                                a SecretRef so that the Builder CRD can be provided
                                a secret for when a service account can't be set."
                              type: string
                          required:
                          - secret
                          - url
                          type: object
                        repository:
                          description: Repository information is passed down to buildkit
                            as instruction on how to proceed with the repository.
                            The image will be build from source if the `Repository`
                            is set.
                          properties:
                            context:
                              description: It's the location for the content of your
                                build within the repository.
                              type: string
                            dockerfile:
                              description: Location of your Dockerfile within the
                                repository.
                              type: string
                            hash:
                              description: Hash of the commit to build (usually a
                                sha)
                              type: string
                            ref:
                              description: Reference is usually a branch.
                              type: string
                            secret:
                              description: SecretRef Reference to an existing k8s
                                secret. The secret need to exist within the same namespace.
                                If the secret doesn't exists and the repository is
                                private, the build will fail trying to pull the repository.
                              type: string
                            url:
                              description: URL of the repository
                              type: string
                          required:
                          - context
                          - dockerfile
                          - ref
                          - secret
                          - url
                          type: object
                      type: object
                    name:
                      type: string
                    networks:
                      description: Network service
                      items:
                        properties:
                          ingress:
                            description: If the Ingress field is set, an ingress will
                              be created with the spec
                            properties:
                              path:
                                default: /
                                description: Path is matched agaisnt the path of the
                                  incoming request. Path must begin with a '/'.
                                type: string
                              path_type:
                                description: https://pkg.go.dev/k8s.io/api@v0.27.2/networking/v1#HTTPIngressPath
                                  Defaults to Prefix
                                type: string
                            type: object
                          name:
                            description: Needs to be unique within a component, will
                              be used as a prefix for the Ingress's host if the Ingress
                              is set.
                            type: string
                          port:
                            type: integer
                          protocol:
                            type: string
                        required:
                        - name
                        - port
                        type: object
                      type: array
                  required:
                  - image
                  - name
                  type: object
                type: array
              environments:
                description: Defines all the environments that will be needed for
                  this workspace
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
              host:
                description: "The host that components can use to generate ingresses.
                  This list assumes that there is a load balancer that can accept
                  any of these host upstream and can direct them to the ingress controller.
                  \n The domains here will be prefixed by the Workspace tag and the
                  components' network name. \n # Example \n tag: \"my-workspace\"
                  host: release.com components: - name: backend network: name: app
                  \n For the `backend` component, if an ingress is created, it would
                  be configured to listen to `app.my-workspace.release.com`"
                type: string
              tag:
                description: Default tag for all the images that are build that don't
                  have a tag specified to them. If no value is set, it will be created
                  before the builds starts. A tag needs to be a valid DNS_LABEL and
                  as such, it needs to start with an alphabetic character (no numbers)
                type: string
            required:
            - environments
            - host
            type: object
          status:
            description: WorkspaceStatus defines the observed state of Workspace
            properties:
              builds:
                description: Builds are the unit of work associated for each of the
                  builds that are required for this workspace to launch. Builds are
                  seeding the Images as they complete.
                items:
                  description: Reference is used to create untyped references to different
                    object that needs to be tracked inside of Custom Resources. Examples
                    can be found in Workspace & Build where for workspace, it needs
                    to reference a build or a pod and uses this struct as a way to
                    serialize the labels of the underlying resource.
                  properties:
                    name:
                      description: '`name` is the name of the resourec. Required'
                      type: string
                    namespace:
                      description: '`namespace` is the namespace of the resource.
                        Required'
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                type: array
              conditions:
                description: Conditions are how the operator handle state transition.
                  Each condition represent a task that needs to go to completion.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Error.
                      type: string
                    type:
                      description: Type is the type of the condition and can be think
                        of a task that needs to run for a workspace to become healthy.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              images:
                description: Images are seeded by Builds as they are completed. It's
                  also possible for some services in a workspace to have images that
                  don't require a build (think database, etc.).
                items:
                  properties:
                    metadata:
                      type: string
                    url:
                      type: string
                  type: object
                type: array
              namespace:
                description: ManagedNamespace is the namespace that will be associated
                  with this workspace. All k8s objects that will need to exist for
                  this workspace will live under that namespace
                type: string
              phase:
                description: Phase is a high overview of the state of this workspace.
                  It is used as a proxy to represent the current state of the Workspace
                  with regards to its conditions.
                type: string
              services:
                additionalProperties:
                  description: Reference is used to create untyped references to different
                    object that needs to be tracked inside of Custom Resources. Examples
                    can be found in Workspace & Build where for workspace, it needs
                    to reference a build or a pod and uses this struct as a way to
                    serialize the labels of the underlying resource.
                  properties:
                    name:
                      description: '`name` is the name of the resourec. Required'
                      type: string
                    namespace:
                      description: '`namespace` is the namespace of the resource.
                        Required'
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                description: References to services that are created for this workspace.
                  These service are needed to figure out ports mapping for the container
                  when the workspace is in the Deploying stage.
                type: object
              stage:
                description: DEPRECATED
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
